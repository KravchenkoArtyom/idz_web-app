@model idz.Models.ViewModels.CreateCareLogVM

@{
    ViewBag.Title = "Редактирование лога";
}

<h2>Редактирование лога</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "Тип услуги не соответсвует работнику \n Пожалуйста, выберите другого работника или услугу", new { @class = "form-control" })


    <div class="form-group">
        <label for="Time">Время</label>
        <input type="datetime-local" id="Time" name="Time" class="form-control">
        <span id="TimeError" class="text-danger"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pet_ID, "Питомец", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Pet_ID, Model.PetsList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Pet_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Employee_ID, "Работник", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Employee_ID, Model.EmployeesList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Employee_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CareType_ID, "Услуга", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CareType_ID, Model.CareTypesList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CareType_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-default" />
        </div>
    </div>
</div>
}



<script>
    document.getElementById('Time').addEventListener('change', function (e) {
        var input = e.target;
        var datetime = new Date(input.value);

        if (isNaN(datetime.getTime())) {
            // Введенная дата и время недействительны
            document.getElementById('TimeError').textContent = 'Пожалуйста, введите действительную дату и время.';
        } else {
            // Введенная дата и время действительны
            document.getElementById('TimeError').textContent = '';
        }
    });
</script>